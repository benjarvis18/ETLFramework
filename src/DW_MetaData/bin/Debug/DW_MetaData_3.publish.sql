/*
Deployment script for DW_MetaData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DW_MetaData"
:setvar DefaultFilePrefix "DW_MetaData"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [Staging].[FK_Staging_Connections_SourceConnectionId_Staging_Extractions]...';


GO
ALTER TABLE [Staging].[Extractions] DROP CONSTRAINT [FK_Staging_Connections_SourceConnectionId_Staging_Extractions];


GO
PRINT N'Dropping [Staging].[FK_Staging_Connections_TargetConnectionId_Staging_Extractions]...';


GO
ALTER TABLE [Staging].[Extractions] DROP CONSTRAINT [FK_Staging_Connections_TargetConnectionId_Staging_Extractions];


GO
PRINT N'Starting rebuilding table [Staging].[Extractions]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [Staging].[tmp_ms_xx_Extractions] (
    [ExtractionId]       INT           IDENTITY (1, 1) NOT NULL,
    [SourceConnectionId] INT           NOT NULL,
    [SourceSchema]       [sysname]     NULL,
    [SourceTableName]    [sysname]     NULL,
    [SourceSqlQuery]     VARCHAR (MAX) NULL,
    [TargetConnectionId] INT           NOT NULL,
    [TargetSchema]       [sysname]     NOT NULL,
    [TargetTableName]    [sysname]     NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Staging_Extractions1] PRIMARY KEY CLUSTERED ([ExtractionId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [Staging].[Extractions])
    BEGIN
        SET IDENTITY_INSERT [Staging].[tmp_ms_xx_Extractions] ON;
        INSERT INTO [Staging].[tmp_ms_xx_Extractions] ([ExtractionId], [SourceConnectionId], [SourceSchema], [SourceTableName], [TargetConnectionId], [TargetSchema], [TargetTableName])
        SELECT   [ExtractionId],
                 [SourceConnectionId],
                 [SourceSchema],
                 [SourceTableName],
                 [TargetConnectionId],
                 [TargetSchema],
                 [TargetTableName]
        FROM     [Staging].[Extractions]
        ORDER BY [ExtractionId] ASC;
        SET IDENTITY_INSERT [Staging].[tmp_ms_xx_Extractions] OFF;
    END

DROP TABLE [Staging].[Extractions];

EXECUTE sp_rename N'[Staging].[tmp_ms_xx_Extractions]', N'Extractions';

EXECUTE sp_rename N'[Staging].[tmp_ms_xx_constraint_PK_Staging_Extractions1]', N'PK_Staging_Extractions', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [Staging].[FK_Staging_Connections_SourceConnectionId_Staging_Extractions]...';


GO
ALTER TABLE [Staging].[Extractions] WITH NOCHECK
    ADD CONSTRAINT [FK_Staging_Connections_SourceConnectionId_Staging_Extractions] FOREIGN KEY ([SourceConnectionId]) REFERENCES [Staging].[Connections] ([ConnectionId]);


GO
PRINT N'Creating [Staging].[FK_Staging_Connections_TargetConnectionId_Staging_Extractions]...';


GO
ALTER TABLE [Staging].[Extractions] WITH NOCHECK
    ADD CONSTRAINT [FK_Staging_Connections_TargetConnectionId_Staging_Extractions] FOREIGN KEY ([TargetConnectionId]) REFERENCES [Staging].[Connections] ([ConnectionId]);


GO
PRINT N'Creating [Staging].[CK_Staging_Extractions_TableOrQuerySpecified]...';


GO
ALTER TABLE [Staging].[Extractions] WITH NOCHECK
    ADD CONSTRAINT [CK_Staging_Extractions_TableOrQuerySpecified] CHECK ((SourceSchema IS NOT NULL AND SourceTableName IS NOT NULL ) OR SourceSqlQuery IS NOT NULL);


GO
PRINT N'Refreshing [Staging].[GetExtractions]...';


GO
EXECUTE sp_refreshsqlmodule N'[Staging].[GetExtractions]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [Staging].[Extractions] WITH CHECK CHECK CONSTRAINT [FK_Staging_Connections_SourceConnectionId_Staging_Extractions];

ALTER TABLE [Staging].[Extractions] WITH CHECK CHECK CONSTRAINT [FK_Staging_Connections_TargetConnectionId_Staging_Extractions];

ALTER TABLE [Staging].[Extractions] WITH CHECK CHECK CONSTRAINT [CK_Staging_Extractions_TableOrQuerySpecified];


GO
PRINT N'Update complete.';


GO
